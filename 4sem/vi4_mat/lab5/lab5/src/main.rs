fn f(x: f64) -> f64 {
    2.0 * (x.cosh() + 2.0).ln() * (-0.2 * x).exp() + (0.5 * x).sin()
}

// Первая производная - 1-й порядок
fn df1(x: f64, h: f64) -> f64 {
    (f(x + h) - f(x)) / h
}

// Первая производная - 2-й порядок
fn df2(x: f64, h: f64) -> f64 {
    (f(x + h) - f(x - h)) / (2.0 * h)
}

// Первая производная - 4-й порядок
fn df4(x: f64, h: f64) -> f64 {
    (-f(x + 2.0*h) + 8.0*f(x + h) - 8.0*f(x - h) + f(x - 2.0*h)) / (12.0 * h)
}

// Вторая производная
fn d2f(x: f64, h: f64) -> f64 {
    (f(x + h) - 2.0*f(x) + f(x - h)) / (h * h)
}

// Третья производная
fn d3f(x: f64, h: f64) -> f64 {
    (f(x + 1.5*h) - 3.0*f(x + 0.5*h) + 3.0*f(x - 0.5*h) - f(x - 1.5*h)) / (h.powi(3))
}

fn main() {
    let x = 1.0;
    let h = 0.01;
    
    println!("Первая производная (1-й порядок): {}", df1(x, h));
    println!("Первая производная (2-й порядок): {}", df2(x, h));
    println!("Первая производная (4-й порядок): {}", df4(x, h));
    println!("Вторая производная: {}", d2f(x, h));
    println!("Третья производная: {}", d3f(x, h));
}